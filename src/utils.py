import re

def escape_special_characters(text):
    return text.replace('\\', '\\\\').replace('{', '{{').replace('}', '}}')

def is_rationale_correct(generated_rationale, correct_option_letter, question):
    if correct_option_letter not in generated_rationale:
        return False
    
    math_indicators = ['+', '-', '*', '/', '=', 'km', 'percentage', 'rate', 'total']
    if any(indicator in generated_rationale.lower() for indicator in math_indicators):
        return True
    
    return True

# Function to map the generated letter to the corresponding answer text (if needed)
def map_letter_to_answer(letter, options_dict):
    """
    Maps the option letter to the corresponding answer text.
    
    Parameters:
        letter (str): The option letter generated by the model (A, B, C, D, or E).
        options_dict (dict): A dictionary mapping option letters to option texts.
        
    Returns:
        str or None: The corresponding answer text if the letter is valid, else None.
    """
    letter = letter.strip().upper()
    return options_dict.get(letter, None)

def map_answer_to_option(generated_answer, options_dict):
    """
    Maps the generated answer to the corresponding option letter.
    """
    generated_answer = generated_answer.strip().upper()
    for letter, option_text in options_dict.items():
        if generated_answer == option_text.strip().upper():
            return letter
    return None

def extract_answer_letter(model_response):
    """
    Extracts the answer letter from the model's response.
    
    Parameters:
        model_response (str): The raw response from the model.
        
    Returns:
        str or None: The extracted answer letter (A, B, C, D, or E) or None if extraction fails.
    """
    # Remove any surrounding whitespace and convert to uppercase
    answer = model_response.strip().upper()
    
    # Check if the answer is a single valid option letter
    if answer in ['A', 'B', 'C', 'D', 'E']:
        return answer
    else:
        # If the answer doesn't match, return None
        return None
